import { HttpHeadersEnum } from './http-headers.enum';

describe('http-headers.enum.spec | HttpHeadersEnum', () => {
  it('Deve conter 99 valores corretamente', () => {
    const values = Object.values(HttpHeadersEnum);
    expect(values.length).toBe(99);
    expect(values[0]).toBe('Accept');
    expect(values[1]).toBe('Accept-CH');
    expect(values[2]).toBe('Accept-CH-Lifetime');
    expect(values[3]).toBe('Accept-Charset');
    expect(values[4]).toBe('Accept-Encoding');
    expect(values[5]).toBe('Accept-Language');
    expect(values[6]).toBe('Accept-Ranges');
    expect(values[7]).toBe('Access-Control-Allow-Credentials');
    expect(values[8]).toBe('Access-Control-Allow-Headers');
    expect(values[9]).toBe('Access-Control-Allow-Methods');
    expect(values[10]).toBe('Access-Control-Allow-Origin');
    expect(values[11]).toBe('Access-Control-Expose-Headers');
    expect(values[12]).toBe('Access-Control-Max-Age');
    expect(values[13]).toBe('Access-Control-Request-Headers');
    expect(values[14]).toBe('Access-Control-Request-Method');
    expect(values[15]).toBe('Age');
    expect(values[16]).toBe('Allow');
    expect(values[17]).toBe('Authorization');
    expect(values[18]).toBe('Cache-Control');
    expect(values[19]).toBe('Connection');
    expect(values[20]).toBe('Content-DPR');
    expect(values[21]).toBe('Content-Disposition');
    expect(values[22]).toBe('ContentEncoding');
    expect(values[23]).toBe('Content-Language');
    expect(values[24]).toBe('Content-Length');
    expect(values[25]).toBe('Content-Location');
    expect(values[26]).toBe('Content-Range');
    expect(values[27]).toBe('Content-Security-Policy');
    expect(values[28]).toBe('Content-Security-Policy-Report-Only');
    expect(values[29]).toBe('Content-Type');
    expect(values[30]).toBe('Cookie');
    expect(values[31]).toBe('Cookie2');
    expect(values[32]).toBe('DNT');
    expect(values[33]).toBe('DPR');
    expect(values[34]).toBe('Date');
    expect(values[35]).toBe('Device-Memory');
    expect(values[36]).toBe('ETag');
    expect(values[37]).toBe('Expect');
    expect(values[38]).toBe('Expires');
    expect(values[39]).toBe('Forwarded');
    expect(values[40]).toBe('From');
    expect(values[41]).toBe('Host');
    expect(values[42]).toBe('If-Match');
    expect(values[43]).toBe('If-Modified-Since');
    expect(values[44]).toBe('If-None-Match');
    expect(values[45]).toBe('If-Range');
    expect(values[46]).toBe('If-Unmodified-Since');
    expect(values[47]).toBe('Keep-Alive');
    expect(values[48]).toBe('Last-Event-ID');
    expect(values[49]).toBe('Last-Modified');
    expect(values[50]).toBe('Link');
    expect(values[51]).toBe('Location');
    expect(values[52]).toBe('Max-Forwards');
    expect(values[53]).toBe('Origin');
    expect(values[54]).toBe('Ping-From');
    expect(values[55]).toBe('Ping-To');
    expect(values[56]).toBe('Pragma');
    expect(values[57]).toBe('Proxy-Authenticate');
    expect(values[58]).toBe('Proxy-Authorization');
    expect(values[59]).toBe('Public-Key-Pins');
    expect(values[60]).toBe('Public-Key-Pins-Report-Only');
    expect(values[61]).toBe('Range');
    expect(values[62]).toBe('Referer');
    expect(values[63]).toBe('Referrer-Policy');
    expect(values[64]).toBe('Retry-After');
    expect(values[65]).toBe('Save-Data');
    expect(values[66]).toBe('Sec-WebSocket-Accept');
    expect(values[67]).toBe('Sec-WebSocket-Extensions');
    expect(values[68]).toBe('Sec-WebSocket-Key');
    expect(values[69]).toBe('Sec-WebSocket-Protocol');
    expect(values[70]).toBe('Sec-WebSocket-Version');
    expect(values[71]).toBe('Server');
    expect(values[72]).toBe('Set-Cookie');
    expect(values[73]).toBe('Set-Cookie2');
    expect(values[74]).toBe('Strict-Transport-Security');
    expect(values[75]).toBe('TE');
    expect(values[76]).toBe('Timing-Allow-Origin');
    expect(values[77]).toBe('Tk');
    expect(values[78]).toBe('Trailer');
    expect(values[79]).toBe('Transfer-Encoding');
    expect(values[80]).toBe('Upgrade');
    expect(values[81]).toBe('Upgrade-Insecure-Requests');
    expect(values[82]).toBe('User-Agent');
    expect(values[83]).toBe('Vary');
    expect(values[84]).toBe('Via');
    expect(values[85]).toBe('Viewport-Width');
    expect(values[86]).toBe('WWW-Authenticate');
    expect(values[87]).toBe('Warning');
    expect(values[88]).toBe('Width');
    expect(values[89]).toBe('X-Content-Duration');
    expect(values[90]).toBe('X-Content-Type-Options');
    expect(values[91]).toBe('X-DNS-Prefetch-Control');
    expect(values[92]).toBe('AX-Forwarded-Forge');
    expect(values[93]).toBe('X-Forwarded-Host');
    expect(values[94]).toBe('X-Forwarded-Proto');
    expect(values[95]).toBe('X-Frame-Options');
    expect(values[96]).toBe('X-Requested-With');
    expect(values[97]).toBe('X-UA-Compatible');
    expect(values[98]).toBe('X-XSS-Protection');
  });
});
